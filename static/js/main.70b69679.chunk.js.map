{"version":3,"sources":["../../src/Components/StatBox.tsx","../../src/Components/StatRow.tsx","../../src/Components/Skill.tsx","../../src/Components/StatBox2.tsx","../../src/Components/DeathSave.tsx","../../src/Components/AttackTable.tsx","../../src/Components/Currency.tsx","../../src/DnDCharacterStatsSheet.tsx","../../src/Components/Image.tsx","../../src/DnDCharacterProfileSheet.tsx","../../src/Components/SpellTable.tsx","../../src/DnDCharacterSpellSheet.tsx","App.tsx","index.tsx"],"names":["StatBox","props","classes","modifier","value","isNaN","Number","modifierNum","Math","floor","toString","React","className","label","type","onChange","e","name","target","StatRow","Skill","checked","onClick","hint","StatBox2","labelTop","DeathSave","style","display","AttackTable","updateValue","index","field","v","getValue","slice","length","rows","push","width","map","key","bonus","damage","Currency","initialState","character","DnDCharacterStatsSheet","_this","defaultCharacter","state","updateCharacter","oldCharacter","this","getCharacter","newCharacter","Object","assign","setState","onCharacterChanged","render","_this2","textAlign","textTransform","fontSize","classLevel","background","playerName","faction","race","alignment","xp","dciNo","Statbox","str","dex","con","wis","cha","inspiration","proficiencyBonus","strSave","strSaveChecked","dexSave","dexSaveChecked","conSave","conSaveChecked","intSave","intSaveChecked","wisSave","wisSaveChecked","chaSave","chaSaveChecked","marginTop","skillAcrobatics","skillAcrobaticsChecked","skillAnimalHandling","skillAnimalHandlingChecked","skillArcana","skillArcanaChecked","skillAthletics","skillAthleticsChecked","skillDeception","skillDeceptionChecked","skillHistory","skillHistoryChecked","skillInsight","skillInsightChecked","skillIntimidation","skillIntimidationChecked","skillInvestigation","skillInvestigationChecked","skillMedicine","skillMedicineChecked","skillNature","skillNatureChecked","skillPerception","skillPerceptionChecked","skillPerformance","skillPerformanceChecked","skillPersuasion","skillPersuasionChecked","skillReligion","skillReligionChecked","skillSlightOfHand","skillSlightOfHandChecked","skillStealth","skillStealthChecked","skillSurvival","skillSurvivalChecked","passivePerception","otherProficiencies","ac","init","speed","borderRadius","marginBottom","paddingBottom","maxHp","hp","tempHp","hitDiceMax","hitDice","deathsaveSuccesses","deathsaveFailures","attacks","attacksText","cp","sp","ep","gp","pp","equipment","equipment2","paddingTop","personalityTraits","ideals","bonds","flaws","featuresTraits","Component","Image","elementId","backgroundImage","document","getElementById","_document$getElementB","click","id","accept","event","console","log","files","size","window","alert","fr","FileReader","onload","result","readAsDataURL","importImage","DnDCharacterProfileSheet","age","height","weight","eyes","skin","hair","appearance","backstory","factionRank","allies","factionImg","allies2","additionalFeatures","additionalFeatures2","totalNonConsumableMagicItems","treasure","treasure2","SpellTable","showLabels","level","slotsValue","slotsName","slotCount","slots","i1","slotsUsedValue","slotsUsedName","_loop","renderSlotsRemaining","position","left","prepared","DnDCharacterSpellsSheet","spellcastingClass","preparedSpellsTotal","spellSaveDC","spellAttackBonus","cantrips","lvl1Spells","lvl1SpellSlotsTotal","lvl1SpellSlotsUsed","lvl2Spells","lvl2SpellSlotsTotal","lvl2SpellSlotsUsed","lvl3Spells","lvl3SpellSlotsTotal","lvl3SpellSlotsUsed","lvl4Spells","lvl4SpellSlotsTotal","lvl4SpellSlotsUsed","lvl5Spells","lvl5SpellSlotsTotal","lvl5SpellSlotsUsed","lvl6Spells","lvl6SpellSlotsTotal","lvl6SpellSlotsUsed","lvl7Spells","lvl7SpellSlotsTotal","lvl7SpellSlotsUsed","lvl8Spells","lvl8SpellSlotsTotal","lvl8SpellSlotsUsed","lvl9Spells","lvl9SpellSlotsTotal","lvl9SpellSlotsUsed","ScrollToTop","pathname","useLocation","useEffect","scrollTo","withRouter","useState","lsData","localStorage","getItem","JSON","parse","loadDefaultCharacter","setCharacter","navTop","setNavTop","pageYOffset","prevScrollpos","setPrevScrollpos","setLoading","search","characterToLoad","qs","ignoreQueryPrefix","axios","get","then","response","Array","isArray","data","Error","catch","error","statsSheet","profileSheet","spellSheet","setItem","stringify","importCharacter","json","loadCharacter","readAsText","onscroll","currentScrollPos","onScroll","backgroundColor","top","data-toggle","data-target","aria-controls","aria-expanded","aria-label","location","to","a","createElement","file","Blob","href","URL","createObjectURL","download","replace","toLowerCase","exportCharacter","print","exact","path","defaultRedirect","innerWidth","getDefaultRedirect","ReactDOM","basename"],"mappings":"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","file":"static/js/main.70b69679.chunk.js","sourcesContent":["import React from 'react'\n\nfunction StatBox(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  label: React.ReactNode\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-statbox'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  let modifier: string = ''\n  if (props.value && !isNaN(Number(props.value))) {\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\n    if (modifierNum > 0) {\n      modifier = '+' + modifierNum\n    } else {\n      modifier = modifierNum.toString()\n    }\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <label>{props.label}</label>\n        <div className='d-and-d-statbox-modifier'>{modifier}</div>\n      </div>\n      <div className='d-and-d-statbox-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\n\nfunction StatRow(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  label: React.ReactNode\n}) {\n  let classes = 'd-and-d-statrow'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-statrow-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n      <div className='d-and-d-statrow-label'>\n        <label>{props.label}</label>\n      </div>\n    </div>\n  )\n}\n\nexport default StatRow\n","import React from 'react'\n\nfunction Skill(props: {\n  classes?: string\n  checked?: boolean\n  onChange: (arg0: string, arg1: string | boolean) => void\n  name: string\n  value: string | number | readonly string[] | undefined\n  label?: React.ReactNode\n  hint?: React.ReactNode\n}) {\n  let classes = 'd-and-d-skill'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div\n        className={\n          props.checked ? 'd-and-d-skill-circle active' : 'd-and-d-skill-circle'\n        }\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\n      />\n      <input\n        type='text'\n        value={props.value ? props.value : ''}\n        onChange={(e) => props.onChange(props.name, e.target.value)}\n      />\n      <label>{props.label}</label>\n      {props.hint ? (\n        <span className='d-and-d-skill-hint'>{props.hint}</span>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Skill\n","import React from 'react'\n\nfunction StatBox2(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  labelTop?: {} | null | undefined\n  label?: React.ReactNode\n}) {\n  let classes = 'd-and-d-statbox type2'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <div className='d-and-d-statbox-modifier'>\n          <input\n            type='text'\n            value={props.value ? props.value : ''}\n            onChange={(e) => props.onChange(props.name, e.target.value)}\n          />\n        </div>\n        {props.labelTop != null ? (\n          <div>\n            <label className='label-top'>{props.labelTop}</label>\n          </div>\n        ) : null}\n        {props.label != null ? (\n          <div>\n            <label>{props.label}</label>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox2\n","import React from 'react'\n\nfunction DeathSave(props: {\n  classes?: string\n  label: React.ReactNode\n  value?: number\n  onChange: (arg0: any, arg1: number | null) => void\n  name: any\n}) {\n  let classes = 'd-and-d-deathsave'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <label>{props.label}</label>\n      <div style={{ display: 'inline-block' }}>\n        <div\n          className={\n            props.value && props.value >= 1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 1 ? null : 1)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 2\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 2 ? null : 2)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 3\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 3 ? null : 3)\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DeathSave\n","import React from 'react'\n\nfunction AttackTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'd-and-d-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th style={{ width: '70px' }}>Atk Bonus</th>\n          <th>Damage/Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              bonus: string | number | readonly string[] | undefined\n              damage: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'d-and-d-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.bonus ? v.bonus : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'bonus', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damage ? v.damage : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damage', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default AttackTable\n","import React from 'react'\n\nfunction Currency(props: {\n  classes?: string\n  label: React.ReactNode\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-currency'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-currency-label'>\n        <label>{props.label}</label>\n      </div>\n      <div className='d-and-d-currency-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Currency\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport Statbox from './Components/StatBox'\nimport StatRow from './Components/StatRow'\nimport Skill from './Components/Skill'\nimport StatBox2 from './Components/StatBox2'\nimport DeathSave from './Components/DeathSave'\nimport AttackTable from './Components/AttackTable'\nimport Currency from './Components/Currency'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterStatsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterStatsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterStatsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterStatsSheet extends React.Component<\n  IDnDCharacterStatsSheetProps,\n  IDnDCharacterStatsSheetState\n> {\n  constructor(props: IDnDCharacterStatsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Character Name\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.classLevel ? character.classLevel : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('classLevel', e.target.value)\n                      }\n                    />\n                    <label>Class & Level</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.background ? character.background : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('background', e.target.value)\n                      }\n                    />\n                    <label>Background</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.playerName ? character.playerName : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('playerName', e.target.value)\n                      }\n                    />\n                    <label>Player Name</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.faction ? character.faction : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('faction', e.target.value)\n                      }\n                    />\n                    <label>Faction</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.race ? character.race : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('race', e.target.value)\n                      }\n                    />\n                    <label>Race</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.alignment ? character.alignment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('alignment', e.target.value)\n                      }\n                    />\n                    <label>Alignment</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.xp ? character.xp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('xp', e.target.value)\n                      }\n                    />\n                    <label>Experience Points</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.dciNo ? character.dciNo : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('dciNo', e.target.value)\n                      }\n                    />\n                    <label>DCI Number</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='row'>\n                <div className='col-4 pr-1'>\n                  <div className='d-and-d-box gray'>\n                    <Statbox\n                      label='Strength'\n                      name='str'\n                      value={character.str}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Dexterity'\n                      name='dex'\n                      value={character.dex}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Constitution'\n                      name='con'\n                      value={character.con}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Intelligence'\n                      name='int'\n                      value={character.int}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Wisdom'\n                      name='wis'\n                      value={character.wis}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Charisma'\n                      name='cha'\n                      value={character.cha}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='col-8'>\n                  <StatRow\n                    label='Inspiration'\n                    name='inspiration'\n                    value={character.inspiration}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <StatRow\n                    classes='rounded'\n                    label='Proficiency Bonus'\n                    name='proficiencyBonus'\n                    value={character.proficiencyBonus}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Strength'\n                        name='strSave'\n                        value={character.strSave}\n                        checked={character.strSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Dexterity'\n                        name='dexSave'\n                        value={character.dexSave}\n                        checked={character.dexSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Constitution'\n                        name='conSave'\n                        value={character.conSave}\n                        checked={character.conSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intelligence'\n                        name='intSave'\n                        value={character.intSave}\n                        checked={character.intSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Wisdom'\n                        name='wisSave'\n                        value={character.wisSave}\n                        checked={character.wisSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Charisma'\n                        name='chaSave'\n                        value={character.chaSave}\n                        checked={character.chaSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Saving Throws\n                    </label>\n                  </div>\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Acrobatics'\n                        hint='(Dex)'\n                        name='skillAcrobatics'\n                        value={character.skillAcrobatics}\n                        checked={character.skillAcrobaticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Animal Handling'\n                        hint='(Wis)'\n                        name='skillAnimalHandling'\n                        value={character.skillAnimalHandling}\n                        checked={character.skillAnimalHandlingChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Arcana'\n                        hint='(Int)'\n                        name='skillArcana'\n                        value={character.skillArcana}\n                        checked={character.skillArcanaChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Athletics'\n                        hint='(Str)'\n                        name='skillAthletics'\n                        value={character.skillAthletics}\n                        checked={character.skillAthleticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Deception'\n                        hint='(Cha)'\n                        name='skillDeception'\n                        value={character.skillDeception}\n                        checked={character.skillDeceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='History'\n                        hint='(Int)'\n                        name='skillHistory'\n                        value={character.skillHistory}\n                        checked={character.skillHistoryChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Insight'\n                        hint='(Wis)'\n                        name='skillInsight'\n                        value={character.skillInsight}\n                        checked={character.skillInsightChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intimidation'\n                        hint='(Cha)'\n                        name='skillIntimidation'\n                        value={character.skillIntimidation}\n                        checked={character.skillIntimidationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Investigation'\n                        hint='(Int)'\n                        name='skillInvestigation'\n                        value={character.skillInvestigation}\n                        checked={character.skillInvestigationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Medicine'\n                        hint='(Wis)'\n                        name='skillMedicine'\n                        value={character.skillMedicine}\n                        checked={character.skillMedicineChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Nature'\n                        hint='(Int)'\n                        name='skillNature'\n                        value={character.skillNature}\n                        checked={character.skillNatureChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Perception'\n                        hint='(Wis)'\n                        name='skillPerception'\n                        value={character.skillPerception}\n                        checked={character.skillPerceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Performance'\n                        hint='(Cha)'\n                        name='skillPerformance'\n                        value={character.skillPerformance}\n                        checked={character.skillPerformanceChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Persuasion'\n                        hint='(Cha)'\n                        name='skillPersuasion'\n                        value={character.skillPersuasion}\n                        checked={character.skillPersuasionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Religion'\n                        hint='(Int)'\n                        name='skillReligion'\n                        value={character.skillReligion}\n                        checked={character.skillReligionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Sleight of Hand'\n                        hint='(Dex)'\n                        name='skillSlightOfHand'\n                        value={character.skillSlightOfHand}\n                        checked={character.skillSlightOfHandChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Stealth'\n                        hint='(Dex)'\n                        name='skillStealth'\n                        value={character.skillStealth}\n                        checked={character.skillStealthChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Survival'\n                        hint='(Wis)'\n                        name='skillSurvival'\n                        value={character.skillSurvival}\n                        checked={character.skillSurvivalChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Skills\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-2'>\n                <StatRow\n                  classes='rounded rounded-sides'\n                  label='Passive Wisdom (Perception)'\n                  name='passivePerception'\n                  value={character.passivePerception}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n              <div className='d-and-d-box mt-4'>\n                <textarea\n                  value={\n                    character.otherProficiencies\n                      ? character.otherProficiencies\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('otherProficiencies', e.target.value)\n                  }\n                  rows={12}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Other Proficiencies & Languages\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box gray'>\n                <div className='row'>\n                  <div className='col-4 pr-2'>\n                    <StatBox2\n                      classes='shield'\n                      labelTop='Armour'\n                      label='Class'\n                      name='ac'\n                      value={character.ac}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pr-2 pl-2'>\n                    <StatBox2\n                      label='Initiative'\n                      name='init'\n                      value={character.init}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pl-2'>\n                    <StatBox2\n                      label='Speed'\n                      name='speed'\n                      value={character.speed}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <div className='d-and-d-gray-text'>\n                    <label style={{ width: '95px' }}>Hit Point Maximum</label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 95px)' }}\n                      className='d-and-d-linput'\n                      value={character.maxHp ? character.maxHp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('maxHp', e.target.value)\n                      }\n                    />\n                  </div>\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.hp ? character.hp : ''}\n                    onChange={(e) => this.updateCharacter('hp', e.target.value)}\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Current Hit Points\n                  </label>\n                </div>\n                <div\n                  className='d-and-d-box white mb-2'\n                  style={{ borderRadius: '0 0 8px 8px', paddingBottom: '5px' }}\n                >\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.tempHp ? character.tempHp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('tempHp', e.target.value)\n                    }\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Temporary Hit Points\n                  </label>\n                </div>\n\n                <div className='row mt-1'>\n                  <div className='col-6 pr-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <div className='d-and-d-gray-text'>\n                        <label style={{ width: '25px' }}>Total</label>\n                        <input\n                          type='text'\n                          style={{ width: 'calc(100% - 25px)' }}\n                          className='d-and-d-linput'\n                          value={\n                            character.hitDiceMax ? character.hitDiceMax : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter('hitDiceMax', e.target.value)\n                          }\n                        />\n                      </div>\n                      <input\n                        type='text'\n                        className='d-and-d-cinput'\n                        value={character.hitDice ? character.hitDice : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice', e.target.value)\n                        }\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '5px' }}\n                      >\n                        Hit Dice\n                      </label>\n                    </div>\n                  </div>\n                  <div className='col-6 pl-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <DeathSave\n                        classes='d-and-d-save-success'\n                        label='Successes'\n                        name='deathsaveSuccesses'\n                        value={character.deathsaveSuccesses}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <DeathSave\n                        classes='d-and-d-save-failure'\n                        label='Failures'\n                        name='deathsaveFailures'\n                        value={character.deathsaveFailures}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '6px' }}\n                      >\n                        Death Saves\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <AttackTable\n                  rows={3}\n                  name='attacks'\n                  value={character.attacks}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <textarea\n                  value={character.attacksText ? character.attacksText : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('attacksText', e.target.value)\n                  }\n                  rows={6}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Attacks & Spellcasting\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-4'>\n                <div className='row'>\n                  <div className='' style={{ width: '100px' }}>\n                    <Currency\n                      label='CP'\n                      name='cp'\n                      value={character.cp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='SP'\n                      name='sp'\n                      value={character.sp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='EP'\n                      name='ep'\n                      value={character.ep}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='GP'\n                      name='gp'\n                      value={character.gp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='PP'\n                      name='pp'\n                      value={character.pp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col'>\n                    <textarea\n                      className='d-and-d-equipment-indent'\n                      value={character.equipment ? character.equipment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                  <div className='col-md-12'>\n                    <textarea\n                      value={character.equipment2 ? character.equipment2 : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment2', e.target.value)\n                      }\n                      rows={4}\n                    />\n                  </div>\n                </div>\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Equipment\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div\n                className='d-and-d-box gray'\n                style={{ marginBottom: '17px' }}\n              >\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={\n                      character.personalityTraits\n                        ? character.personalityTraits\n                        : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('personalityTraits', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Personality Traits</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.ideals ? character.ideals : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('ideals', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Ideals</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.bonds ? character.bonds : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('bonds', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Bonds</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 8px 8px',\n                    marginBottom: '0px',\n                    paddingTop: '1px',\n                    paddingBottom: '4px'\n                  }}\n                >\n                  <textarea\n                    value={character.flaws ? character.flaws : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('flaws', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Flaws</label>\n                </div>\n              </div>\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.featuresTraits ? character.featuresTraits : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('featuresTraits', e.target.value)\n                  }\n                  rows={27}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Features & Traits\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterStatsSheet\n","import React from 'react'\n\nfunction Image(props: {\n  classes?: string\n  value: any\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  function importImage(event: any) {\n    console.log(event)\n    if (event.target.files.length > 0) {\n      console.log(event.target.files)\n      if (event.target.files[0].size > 2000000) {\n        window.alert(\n          'Image is too large. Max size is 2 Mb. Please reduce the size and upload again.'\n        )\n        return\n      }\n\n      var fr = new FileReader()\n\n      fr.onload = function (e) {\n        if (\n          e.target &&\n          e.target.result &&\n          typeof e.target.result === 'string'\n        ) {\n          props.onChange(props.name, e.target.result)\n        }\n      }\n\n      fr.readAsDataURL(event.target.files[0])\n    }\n  }\n\n  let classes = 'd-and-d-image'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  const elementId = 'd-and-d-image-' + props.name\n\n  return (\n    <div\n      className={classes}\n      style={{\n        backgroundImage: props.value ? 'url(' + props.value + ')' : ''\n      }}\n      onClick={() => document.getElementById(elementId)?.click()}\n    >\n      <input\n        style={{ display: 'none' }}\n        type='file'\n        id={elementId}\n        accept='image/*'\n        onChange={(e) => importImage(e)}\n      />\n    </div>\n  )\n}\n\nexport default Image\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatRow from './Components/StatRow'\nimport Image from './Components/Image'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterProfileSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterProfileSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterProfileSheetState = {\n  character: {}\n}\n\nclass DnDCharacterProfileSheet extends React.Component<\n  IDnDCharacterProfileSheetProps,\n  IDnDCharacterProfileSheetState\n> {\n  constructor(props: IDnDCharacterProfileSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Character Name\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.age ? character.age : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('age', e.target.value)\n                      }\n                    />\n                    <label>Age</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.height ? character.height : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('height', e.target.value)\n                      }\n                    />\n                    <label>Height</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.weight ? character.weight : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('weight', e.target.value)\n                      }\n                    />\n                    <label>Weight</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.eyes ? character.eyes : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('eyes', e.target.value)\n                      }\n                    />\n                    <label>Eyes</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.skin ? character.skin : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('skin', e.target.value)\n                      }\n                    />\n                    <label>Skin</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.hair ? character.hair : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('hair', e.target.value)\n                      }\n                    />\n                    <label>Hair</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box square'>\n                <Image \n                  name='appearance'\n                  value={character.appearance}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Character Appearance\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.backstory ? character.backstory : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('backstory', e.target.value)\n                  }\n                  rows={26}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Character Backstory\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-8'>\n              <div className='d-and-d-box'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <div className='d-and-d-gray-text' style={{ paddingBottom: '1px' }}>\n                      <label style={{ width: '70px' }}>Faction Rank</label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 70px)' }}\n                        className='d-and-d-linput'\n                        value={character.factionRank ? character.factionRank : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('factionRank', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies ? character.allies : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies', e.target.value)\n                      }\n                      rows={16}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='d-and-d-box gray noborder' style={{marginBottom: '13px'}}>\n                      <div className='d-and-d-faction-input'>\n                        <label>Faction</label>\n                        <input\n                          type='text'\n                          value={character.faction ? character.faction : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('faction', e.target.value)\n                          }\n                        />\n                      </div>\n                      <Image \n                        classes='faction'\n                        name='factionImg'\n                        value={character.factionImg}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies2 ? character.allies2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies2', e.target.value)\n                      }\n                      rows={3}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Allies & Organisations\n                </label>\n              </div>\n              \n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures ? character.additionalFeatures : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures2 ? character.additionalFeatures2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures2', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                </div>\n\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Additional Features & Traits\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <StatRow\n                      classes='m-2 rounded rounded-sides wide-input'\n                      label='Total Non-Consumable Magic Items'\n                      name='totalNonConsumableMagicItems'\n                      value={character.totalNonConsumableMagicItems}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '2px' }}\n                      value={\n                        character.treasure ? character.treasure : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure', e.target.value)\n                      }\n                      rows={8}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '4px' }}\n                      value={\n                        character.treasure2 ? character.treasure2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure2', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '4px' }}>\n                  Treasure\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterProfileSheet\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\nfunction SpellTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  slotsName?: string\n  slotsUsedName?: string\n  level: number\n  value?: any\n  slotsValue?: string\n  slotsUsedValue?: number\n  classes?: string\n  rows: number\n  showLabels?: boolean\n  style?: React.CSSProperties | undefined\n}) {\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  function renderSlotsRemaining() {\n    let slotCount = 6\n    if (props.slotsValue != null && props.slotsValue !== '' && Number(props.slotsValue) != null) {\n      slotCount = Number(props.slotsValue)\n    }\n\n    const slots = []\n    for (let i1 = 1; i1 <= slotCount; i1++) {\n      slots.push(\n        <div\n          key={'d-and-d-table-slot-' + props.name + i1}\n          className={\n            props.slotsUsedValue && props.slotsUsedValue >= i1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(\n              props.slotsUsedName,\n              props.slotsUsedValue === i1 ? null : i1\n            )\n          }\n        />\n      )\n    }\n\n    return slots\n  }\n\n  let classes = 'd-and-d-spelllist'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes} style={props.style}>\n      {props.showLabels ? (\n        <div className='d-and-d-spell-header-labels'>\n          <label style={{ width: '20px' }}>Spell Level</label>\n          <label style={{ width: '80px' }}>Slots Total</label>\n          <label style={{ width: 'calc(100% - 100px)' }}>Slots Remaining</label>\n        </div>\n      ) : null}\n      <div className='d-and-d-spell-header'>\n        <div className='d-and-d-spell-level'>{props.level}</div>\n        {props.level === 0 ? (\n          <div className='d-and-d-spell-slots'>\n            <label>Cantrips</label>\n          </div>\n        ) : (\n          <div className='d-and-d-spell-slots'>\n            <div className='d-and-d-spell-slots-total'>\n              <input\n                type='text'\n                value={props.slotsValue ? props.slotsValue : ''}\n                onChange={(e) =>\n                  props.onChange(props.slotsName, e.target.value)\n                }\n              />\n            </div>\n            <div className='d-and-d-spell-slots-remaining'>\n              {renderSlotsRemaining()}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <table>\n        {props.showLabels ? (\n          <thead>\n            <tr>\n              <th style={{ width: '30px', position: 'absolute', left: '-7px' }}>\n                Prepared\n              </th>\n              <th>Spell Name</th>\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {getValue().map(\n            (\n              v: {\n                name: string | number | readonly string[] | undefined\n                prepared: boolean | undefined\n              },\n              index: string\n            ) => {\n              return (\n                <tr key={'d-and-d-table-row-' + props.name + index}>\n                  {props.level > 0 ? (\n                    <td className='d-and-d-spell-prepared'>\n                      <div\n                        className={\n                          v.prepared\n                            ? 'd-and-d-skill-circle active'\n                            : 'd-and-d-skill-circle'\n                        }\n                        onClick={() =>\n                          updateValue(index, 'prepared', !v.prepared)\n                        }\n                      />\n                    </td>\n                  ) : null}\n                  <td>\n                    <input\n                      type='text'\n                      value={v.name ? v.name : ''}\n                      onChange={(e) =>\n                        updateValue(index, 'name', e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default SpellTable\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatBox2 from './Components/StatBox2'\n\nimport './dndstyles.css'\nimport SpellTable from './Components/SpellTable'\n\ninterface IDnDCharacterSpellsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterSpellsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterSpellsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterSpellsSheet extends React.Component<\n  IDnDCharacterSpellsSheetProps,\n  IDnDCharacterSpellsSheetState\n> {\n  constructor(props: IDnDCharacterSpellsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={\n                    character.spellcastingClass\n                      ? character.spellcastingClass\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('spellcastingClass', e.target.value)\n                  }\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Spellcasting Class/Ability\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2' style={{ marginTop: '18px' }}>\n              <div className='d-and-d-attribute-collection gray pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='preparedSpellsTotal'\n                      value={character.preparedSpellsTotal}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Prepared Spells\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Total\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellSaveDC'\n                      value={character.spellSaveDC}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Spell Save DC\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellAttackBonus'\n                      value={character.spellAttackBonus}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Spell Attack\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Bonus\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={0}\n                  rows={9}\n                  name='cantrips'\n                  value={character.cantrips}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                  style={{ marginBottom: '23px' }}\n                />\n                <SpellTable\n                  level={1}\n                  rows={12}\n                  showLabels\n                  name='lvl1Spells'\n                  slotsName='lvl1SpellSlotsTotal'\n                  slotsUsedName='lvl1SpellSlotsUsed'\n                  value={character.lvl1Spells}\n                  slotsValue={character.lvl1SpellSlotsTotal}\n                  slotsUsedValue={character.lvl1SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={2}\n                  rows={13}\n                  name='lvl2Spells'\n                  slotsName='lvl2SpellSlotsTotal'\n                  slotsUsedName='lvl2SpellSlotsUsed'\n                  value={character.lvl2Spells}\n                  slotsValue={character.lvl2SpellSlotsTotal}\n                  slotsUsedValue={character.lvl2SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={3}\n                  rows={13}\n                  name='lvl3Spells'\n                  slotsName='lvl3SpellSlotsTotal'\n                  slotsUsedName='lvl3SpellSlotsUsed'\n                  value={character.lvl3Spells}\n                  slotsValue={character.lvl3SpellSlotsTotal}\n                  slotsUsedValue={character.lvl3SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={4}\n                  rows={13}\n                  name='lvl4Spells'\n                  slotsName='lvl4SpellSlotsTotal'\n                  slotsUsedName='lvl4SpellSlotsUsed'\n                  value={character.lvl4Spells}\n                  slotsValue={character.lvl4SpellSlotsTotal}\n                  slotsUsedValue={character.lvl4SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={5}\n                  rows={9}\n                  name='lvl5Spells'\n                  slotsName='lvl5SpellSlotsTotal'\n                  slotsUsedName='lvl5SpellSlotsUsed'\n                  value={character.lvl5Spells}\n                  slotsValue={character.lvl5SpellSlotsTotal}\n                  slotsUsedValue={character.lvl5SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={6}\n                  rows={9}\n                  name='lvl6Spells'\n                  slotsName='lvl6SpellSlotsTotal'\n                  slotsUsedName='lvl6SpellSlotsUsed'\n                  value={character.lvl6Spells}\n                  slotsValue={character.lvl6SpellSlotsTotal}\n                  slotsUsedValue={character.lvl6SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={7}\n                  rows={9}\n                  name='lvl7Spells'\n                  slotsName='lvl7SpellSlotsTotal'\n                  slotsUsedName='lvl7SpellSlotsUsed'\n                  value={character.lvl7Spells}\n                  slotsValue={character.lvl7SpellSlotsTotal}\n                  slotsUsedValue={character.lvl7SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={8}\n                  rows={7}\n                  name='lvl8Spells'\n                  slotsName='lvl8SpellSlotsTotal'\n                  slotsUsedName='lvl8SpellSlotsUsed'\n                  value={character.lvl8Spells}\n                  slotsValue={character.lvl8SpellSlotsTotal}\n                  slotsUsedValue={character.lvl8SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={9}\n                  rows={7}\n                  name='lvl9Spells'\n                  slotsName='lvl9SpellSlotsTotal'\n                  slotsUsedName='lvl9SpellSlotsUsed'\n                  value={character.lvl9Spells}\n                  slotsValue={character.lvl9SpellSlotsTotal}\n                  slotsUsedValue={character.lvl9SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterSpellsSheet\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  Redirect,\n  useLocation\n} from 'react-router-dom'\nimport axios from 'axios'\nimport qs from 'qs'\n\nimport { DnDCharacterStatsSheet, DnDCharacterProfileSheet, DnDCharacterSpellSheet, DnDCharacter } from 'dnd-character-sheets'\nimport 'dnd-character-sheets/dist/index.css'\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nconst App = (props: any) => {\n  const [character, setCharacter] = useState<DnDCharacter>(loadDefaultCharacter())\n  const [navTop, setNavTop] = useState<number>(0)\n  const [prevScrollpos, setPrevScrollpos] = useState<number>(window.pageYOffset)\n  const [, setLoading] = useState<boolean>(false)\n\n  const { search } = useLocation();\n  useEffect(() => {\n    const characterToLoad = qs.parse(search, { ignoreQueryPrefix: true }).character\n    if (characterToLoad) {\n      setLoading(true)\n      axios\n        .get('characters/' + characterToLoad + '.json')\n        .then((response: any) => {\n          setLoading(false)\n          try {\n            if (!Array.isArray(response.data) && typeof response.data === 'object') {\n              console.log('Loaded Character - ' + characterToLoad)\n              updateCharacter(response.data)\n            } else {\n              throw new Error('Json file does not contain a DnD character.')\n            }\n          }\n          catch {\n            throw new Error('Json file does not contain a DnD character.')\n          }\n        })\n        .catch((error: any) => {\n          console.log('Failed to load Character - ' + characterToLoad)\n          console.log(error)\n          setLoading(false)\n        })\n    }\n  }, [search]);\n\n  const statsSheet = (\n    <DnDCharacterStatsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const profileSheet = (\n    <DnDCharacterProfileSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const spellSheet = (\n    <DnDCharacterSpellSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n\n  window.onscroll = function() {onScroll()};\n  function onScroll() {\n    var currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos || currentScrollPos < 20) {\n      setNavTop(0)\n    } else {\n      setNavTop(-280);\n    }\n    setPrevScrollpos(currentScrollPos)\n  }\n\n  function loadDefaultCharacter () {\n    let character: DnDCharacter = {}\n    const lsData = localStorage.getItem('dnd-character-data')\n    if (lsData) {\n      try {\n        character = JSON.parse(lsData)\n      } catch {}\n    }\n    return character\n  }\n\n  function updateCharacter (character: DnDCharacter) {\n    setCharacter(character)\n    localStorage.setItem('dnd-character-data', JSON.stringify(character))\n  }\n\n  function exportCharacter () {\n    const json = JSON.stringify(character, null, 2)\n\n    var a = document.createElement('a');\n    var file = new Blob([json], {type: 'application/json'});\n    a.href = URL.createObjectURL(file);\n    a.download = character.name ? character.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json' : 'dnd-character.json';\n    a.click();\n  }\n\n\n  function importCharacter (event: any) {\n    if (event.target.files.length > 0){\n      var fr = new FileReader();\n\n      fr.onload = function(e) { \n        if (e.target && e.target.result && typeof e.target.result === 'string') {\n          loadCharacter(e.target.result)\n        }\n      }\n    \n      fr.readAsText(event.target.files[0]);\n      event.target.value = '';\n    }\n  }\n\n  function loadCharacter(json: string) {\n    try {\n      var result = JSON.parse(typeof json === 'string' ? json : '{}');\n      if (!Array.isArray(result) && typeof result === 'object') {\n        updateCharacter(result)\n      } else {\n        window.alert('Json file does not contain a DnD character.')\n      }\n    }\n    catch {\n      window.alert('Json file does not contain a DnD character.')\n    }\n  }\n\n  function clearCharacter() {\n    updateCharacter({ })\n  }\n\n  function getDefaultRedirect(search: string | undefined) {\n    let defaultRedirect = '/stats' + search\n    if (window.innerWidth < 992) { \n      // is mobile device\n      defaultRedirect = '/all' + search\n    }\n    return defaultRedirect\n  }\n\n  return (\n    <div>\n      <nav className='navbar navbar-expand-lg navbar-dark fixed-top' style={{ backgroundColor: 'rgb(204, 10, 33)', top: navTop === 0 ? '' : navTop + 'px' }}>\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\n              <span className='navbar-toggler-icon'></span>\n          </button>\n          <div style={{width:'100%'}}>\n            <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n                <ul className='navbar-nav ml-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/stats' ? 'nav-link active' : 'nav-link'} to='/stats'>Stats</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/profile' ? 'nav-link active' : 'nav-link'} to='/profile'>Profile</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/spells' ? 'nav-link active' : 'nav-link'} to='/spells'>Spells</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/all' ? 'nav-link active' : 'nav-link'} to='/all'>All</Link>\n                    </li>\n                </ul>\n\n                <ul className='navbar-nav ml-auto mr-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <button className='btn btn-dark' onClick={() => exportCharacter()}>Export</button>\n                        <input style={{display: 'none'}} type=\"file\" id=\"selectFiles\" accept=\"application/json\" onChange={(e) => importCharacter(e)} />\n                        <button className='btn btn-dark' onClick={() => document.getElementById(\"selectFiles\")?.click()}>Import</button>\n                        <button className='btn btn-dark' onClick={() => window.print()}>Print</button>\n                        <button className='btn btn-danger' onClick={() => clearCharacter()}>Clear</button>\n                    </li>\n                </ul>\n            </div>\n          </div>\n      </nav>\n      <div className='app-holder'>\n\n        <Switch>\n          <Route exact path='/'>\n            <ScrollToTop />\n            <Redirect to={getDefaultRedirect(search)} />\n          </Route>\n          <Route exact path='/stats'>\n            <ScrollToTop />\n            {statsSheet}\n          </Route>\n          <Route exact path='/profile'>\n            <ScrollToTop />\n            {profileSheet}\n          </Route>\n          <Route exact path='/spells'>\n            <ScrollToTop />\n            {spellSheet}\n          </Route>\n          <Route exact path='/all'>\n            <ScrollToTop />\n            {statsSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {profileSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {spellSheet}\n          </Route>\n        </Switch>\n        \n\n      </div>\n      <footer className=\"no-print page-footer font-small text-white pt-4\" style={{ backgroundColor: 'rgb(211, 49, 21)' }}>\n        <div className=\"container-fluid container-xl text-center text-md-left mt-2 mb-3\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-md-0 mt-3\">\n                <h5>DnD Character Sheets</h5>\n                <p>This page was created using dnd-character-sheets, an open source ReactJs library created by Daryl Buckle.</p>\n              </div>\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Links</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://github.com/darylbuckle/dnd-character-sheets\">Source Code</a>\n                  </li>\n                  <li>\n                    <a href=\"https://www.npmjs.com/package/dnd-character-sheets\">Npm</a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/darylbuckle\">Daryl Buckle</a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Related</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://darylbuckle.github.io/espergen-character-sheets\">Esper Genesis Character Sheets</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div className=\"footer-copyright text-center mt-5 py-2 text-white small\" style={{ backgroundColor: 'rgb(204, 10, 33)' }}>\n          MIT © Daryl Buckle 2020\n        </div>\n      </footer>\n    </div>\n    \n  )\n}\n\nexport default withRouter(App)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router basename={'dnd-character-sheets'}><App /></Router>, document.getElementById('root'))"],"sourceRoot":""}